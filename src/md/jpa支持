#####建库建表
 ```
 create database uuh;
 use uuh;
 CREATE TABLE category_ (
   id int(11) NOT NULL AUTO_INCREMENT,
   name varchar(30),
   PRIMARY KEY (id)
 ) DEFAULT CHARSET=UTF8;
 ```
#####pom中添加依赖
 ```
          <!-- mysql-->
          <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>5.1.21</version>
          </dependency>
   
          <!-- jpa-->
          <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-data-jpa</artifactId>
          </dependency> 
 ```
#####在application.properties中配置数据库连接参数
 ```
 spring.datasource.url=jdbc:mysql://127.0.0.1:3306/uuh?characterEncoding=UTF-8
 spring.datasource.username=root
 spring.datasource.password=123456
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 spring.jpa.properties.hibernate.hbm2ddl.auto=update
 ```
#####建立pojo下的实体类
 ```
 增加一个包：com.uuh.springbootinstance.pojo，然后创建实体类Category。
 @Entity 注解表示这是个实体类
 @Table(name = "category_") 表示这个类对应的表名是 category_ ，注意有下划线哦
 @Id 表明主键
 @GeneratedValue(strategy = GenerationType.IDENTITY) 表明自增长方式
 @Column(name = "id") 表明对应的数据库字段名
```
#####建立dao层下的接口
```
增加一个包：com.uuh.springbootinstance.dao，然后创建dao接口CategoryDAO，继承了JpaRepository，并且提供泛型<Category,Integer> 表示这个是针对Category类的DAO,Integer表示主键是Integer类型。
JpaRepository 这个父接口，就提供了CRUD, 分页等等一系列的查询。
```
#####建立controller层
```
增加一个包：com.uuh.springboot.web，然后创建CategoryController 类。
1. 接受listCategory映射
2. 然后获取所有的分类数据
3. 接着放入Model中
4. 跳转到listCategory.jsp中
```